from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram import Router, F
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.filters import Command
from Bot import bot
import asyncio

router = Router()

def create_keyboard(state="Study") -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()

    if state == "Study":
        builder.button(text="–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ", callback_data="Study")

    return builder.as_markup()


@router.message(Command("start"))
async def command_menu(message: Message):
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üéí–°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ"), KeyboardButton(text="üõí–ú–∞–≥–∞–∑–∏–Ω"), KeyboardButton(text="üèÜ–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è")],
            [KeyboardButton(text="üìä–°–ø–∏—Å–æ–∫ –ª–∏–¥–µ—Ä–æ–≤"), KeyboardButton(text="üßæ–ö–≤–µ—Å—Ç—ã")],
            [KeyboardButton(text="üè†–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å"), KeyboardButton(text="üåê–î—Ä—É–∑—å—è")],
            [KeyboardButton(text="‚õèÔ∏è–ü–µ—Ä–µ–π—Ç–∏ –≤ —à–∞—Ö—Ç—É")]
        ],
        resize_keyboard=True
    )
    await message.answer("—Ç—É—Ç –±—É–¥–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞", reply_markup=keyboard)


@router.message(Command("help"))
async def command_help(message: Message):
    text = '''<a href="https://t.me/GemHunterBot_help">–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ FAQ</a>
 ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
–î—Ä—É–≥–∏–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –ø–∏—à–∏—Ç–µ –≤ –Ω–∞—à—É –≥—Ä—É–ø–ø—É @GemHunterBot_chat'''
    await message.answer(text, parse_mode="HTML")


@router.message(Command("id"))
async def get_id(message: Message):
    user_id = message.from_user.id
    await message.answer(f"–í–∞—à ID: {user_id}")

@router.message()
async def handle_reply_button(message: Message):
    if message.text == "üèÜ–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è":
        achiv = 1
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –∏ –Ω–∞–≥—Ä–∞–¥—ã"), KeyboardButton(text="–ú–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è")],
                [KeyboardButton(text="‚è™–ù–∞–∑–∞–¥")]
            ],
            resize_keyboard=True
        )
        await message.answer("–ú–æ–∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π: "+ str(achiv), reply_markup=keyboard)

    elif message.text == "üìä–°–ø–∏—Å–æ–∫ –ª–∏–¥–µ—Ä–æ–≤":
        await message.answer("üìä–°–ø–∏—Å–æ–∫ –ª–∏–¥–µ—Ä–æ–≤ \n"
                             "1. \n"
                             "2. \n"
                             "3. \n"
                             "4. \n"
                             "5. \n"
                             "6. \n"
                             "7. \n"
                             "8. \n"
                             "9. \n"
                             "10. \n")


    elif message.text == "‚õèÔ∏è–ü–µ—Ä–µ–π—Ç–∏ –≤ —à–∞—Ö—Ç—É":
        miners = 0

        keyboard = ReplyKeyboardMarkup(

            keyboard=[

                [KeyboardButton(text="–í—ã–±—Ä–∞—Ç—å —à–∞—Ö—Ç—É"), KeyboardButton(text="–°–æ–≤–º–µ—Å—Ç–Ω–∞—è —à–∞—Ö—Ç–∞")],
                [KeyboardButton(text="–°–∏—Å—Ç–µ–º–∞ –ø–æ–∏—Å–∫–∞ —à–∞—Ö—Ç")],
                [KeyboardButton(text="‚è™–ù–∞–∑–∞–¥")]

            ],

            resize_keyboard=True

        )
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º \n", reply_markup=keyboard)

        await message.answer("‚õèÔ∏è–®–∞—Ö—Ç–∞ \n"
                             "üë®üèø–†–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –≤ —à–∞—Ö—Ç–µ: "+ str(miners))


    elif message.text == "‚è™–ù–∞–∑–∞–¥":
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="üéí–°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ"), KeyboardButton(text="üõí–ú–∞–≥–∞–∑–∏–Ω"),
                 KeyboardButton(text="üèÜ–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è")],
                [KeyboardButton(text="üìä–°–ø–∏—Å–æ–∫ –ª–∏–¥–µ—Ä–æ–≤"), KeyboardButton(text="üßæ–ö–≤–µ—Å—Ç—ã")],
                [KeyboardButton(text="üè†–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å"), KeyboardButton(text="üåê–î—Ä—É–∑—å—è")],
                [KeyboardButton(text="‚õèÔ∏è–ü–µ—Ä–µ–π—Ç–∏ –≤ —à–∞—Ö—Ç—É")]
            ],
            resize_keyboard=True
        )
        await message.answer("—Ç—É—Ç –±—É–¥–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞", reply_markup=keyboard)

    elif message.text == "üõí–ú–∞–≥–∞–∑–∏–Ω":
        bal = 10

        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="üìà–ü—Ä–æ–∫–∞—á–∫–∞"), KeyboardButton(text="üí≥–î–æ–Ω–∞—Ç")],
                [KeyboardButton(text="‚è™–ù–∞–∑–∞–¥")]
            ],
            resize_keyboard=True
        )
        await message.answer("–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: "+ str(bal), reply_markup=keyboard)

    elif message.text == "üéí–°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ":
        await message.answer("üéí–°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ")

    elif message.text == "üè†–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å":
        await message.answer("üè†–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")

    elif message.text == "üåê–î—Ä—É–∑—å—è":
        await message.answer("üåê–î—Ä—É–∑—å—è")

        
    elif message.text == "üßæ–ö–≤–µ—Å—Ç—ã":

        sent_message = await message.answer("–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–≤–µ–¥–µ–Ω–∏–π –æ –∫–≤–µ—Å—Ç–∞—Ö...")
        await asyncio.sleep(2)
        CompletedDailyQuest = 4
        CompletedWeeklyQuest = 0

        DailyIndicator = ""
        WeeklyIndicator = ""

        if CompletedDailyQuest == 4:
            DailyIndicator = "üü© –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ"
        else:
            DailyIndicator = "üü• –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ"

        if CompletedWeeklyQuest == 4:
            WeeklyIndicator += "üü© –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ"
        else:
            WeeklyIndicator = "üü• –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ"

        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text=DailyIndicator), KeyboardButton(text=WeeklyIndicator)],
                [KeyboardButton(text="‚è™–ù–∞–∑–∞–¥")]
            ],
            resize_keyboard=True
        )
        await bot.delete_message(chat_id=sent_message.chat.id,
                                    message_id=sent_message.message_id)
        await message.answer(text = DailyIndicator + " | " + WeeklyIndicator, reply_markup = keyboard)

    elif message.text == "üü© –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ" or message.text == "üü• –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ":
        await message.answer("–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ \n"
                             "1. –ü–µ–Ω–∏—Å \n"
                             "2. –í–∏–∫—Ç–æ—Ä–æ–≤–∏—á \n"
                             "3. –ü–µ–Ω–∏—Å–æ–≤ \n"
                             "4. –î–∞ \n")

    elif message.text == "üü© –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ" or message.text == "üü• –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ":
        await message.answer("–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ \n"
                             "1. \n"
                             "2. \n"
                             "3. \n"
                             "4. \n")

    elif message.text == "üí≥–î–æ–Ω–∞—Ç":
        DonateBalance = 10

        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="‚õèÔ∏è–î–æ–Ω–∞—Ç-–æ—Ä—É–¥–∏–µ"), KeyboardButton(text="üì¶–î–æ–Ω–∞—Ç-–∏–Ω–æ–µ")],
                [KeyboardButton(text="üí∏–ü–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á—ë—Ç")],
                [KeyboardButton(text="‚è™–ù–∞–∑–∞–¥")]
            ],
            resize_keyboard=True
        )
        await message.answer("–í–∞—à –¥–æ–Ω–∞—Ç-–±–∞–ª–∞–Ω—Å: "+ str(DonateBalance)+ "$", reply_markup=keyboard)

    elif message.text == "üìà–ü—Ä–æ–∫–∞—á–∫–∞":
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="‚õèÔ∏è–û—Ä—É–¥–∏–µ"), KeyboardButton(text="‚úñÔ∏è–ú–Ω–æ–∂–∏—Ç–µ–ª–∏"), KeyboardButton(text="üì¶–ò–Ω–æ–µ")],
                [KeyboardButton(text="‚è™–ù–∞–∑–∞–¥")]
            ],
            resize_keyboard=True
        )
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—Ä–æ–∫–∞—á–∫–∏", reply_markup=keyboard)

    elif message.text == "‚õèÔ∏è–û—Ä—É–¥–∏–µ":
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="‚õèÔ∏è–ö–∏—Ä–∫–∞"), KeyboardButton(text="‚õèÔ∏èÔ∏è–ë—É—Ä")],
                [KeyboardButton(text="‚è™–ù–∞–∑–∞–¥")]
            ],
            resize_keyboard=True
        )
        await message.answer("–ö–∞–∫–æ–π —Ç–∏–ø –ø—Ä–µ–¥–º–µ—Ç–∞?", reply_markup=keyboard)

    elif message.text == "‚úñÔ∏è–ú–Ω–æ–∂–∏—Ç–µ–ª–∏":
        await message.answer("‚úñÔ∏è–ú–Ω–æ–∂–∏—Ç–µ–ª–∏ \n"
                             "1. \n"
                             "2. \n"
                             "3. \n"
                             "4. \n"
                             "5. \n")

    elif message.text == "üì¶–ò–Ω–æ–µ":
        await message.answer("üì¶–ò–Ω–æ–µ \n"
                             "1. \n"
                             "2. \n"
                             "3. \n"
                             "4. \n"
                             "5. \n")

    elif message.text == "‚õèÔ∏è–ö–∏—Ä–∫–∞":
        await message.answer("‚õèÔ∏è–ö–∏—Ä–∫–∞ \n"
                             "1. \n"
                             "2. \n"
                             "3. \n"
                             "4. \n"
                             "5. \n")

    elif message.text == "‚õèÔ∏èÔ∏è–ë—É—Ä":
        await message.answer("‚õèÔ∏èÔ∏è–ë—É—Ä \n"
                             "1. \n"
                             "2. \n"
                             "3. \n"
                             "4. \n"
                             "5. \n")


    elif message.text == "‚õèÔ∏è–î–æ–Ω–∞—Ç-–æ—Ä—É–¥–∏–µ":
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="‚õèÔ∏è–°—É–ø–µ—Ä-–∫–∏—Ä–∫–∞"), KeyboardButton(text="‚õèÔ∏èÔ∏è–°—É–ø–µ—Ä-–±—É—Ä")],
                [KeyboardButton(text="‚è™–ù–∞–∑–∞–¥")]
            ],
            resize_keyboard=True
        )
        await message.answer("–ö–∞–∫–æ–π —Ç–∏–ø –¥–æ–Ω–∞—Ç-–ø—Ä–µ–¥–º–µ—Ç–∞?", reply_markup=keyboard)

    elif message.text == "üì¶–î–æ–Ω–∞—Ç-–∏–Ω–æ–µ":
        await message.answer("üì¶–î–æ–Ω–∞—Ç-–ò–Ω–æ–µ \n"
                             "1. \n"
                             "2. \n"
                             "3. \n"
                             "4. \n"
                             "5. \n")

    elif message.text == "‚õèÔ∏è–°—É–ø–µ—Ä-–∫–∏—Ä–∫–∞":
        await message.answer("‚õèÔ∏è–°—É–ø–µ—Ä-–ö–∏—Ä–∫–∞ \n"
                             "1. \n"
                             "2. \n"
                             "3. \n"
                             "4. \n"
                             "5. \n")

    elif message.text == "‚õèÔ∏èÔ∏è–°—É–ø–µ—Ä-–±—É—Ä":
        await message.answer("‚õèÔ∏è–°—É–ø–µ—Ä-Ô∏è–ë—É—Ä \n"
                             "1. \n"
                             "2. \n"
                             "3. \n"
                             "4. \n"
                             "5. \n")

    elif message.text == "üí∏–ü–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á—ë—Ç":
        await message.answer("–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å: 2 Donate = 1‚ÇΩ \n"
                             "–ù–∞–ø–∏—à–∏—Ç–µ —Å—É–º–º—É (‚ÇΩ): ")

    elif message.text == "–ú–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è":
        await message.answer("–í–∞—à–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è: \n"
                             "1. –ü–µ—Ä–≤—ã–π –±–∏–∑–Ω–µ—Å \n"
                             "\n"
                             "-- 0/1 --")

    elif message.text == "–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –∏ –Ω–∞–≥—Ä–∞–¥—ã":
        await message.answer("1. –ü–µ—Ä–≤—ã–π –±–∏–∑–Ω–µ—Å \n"
                             "2. –£—Å–ø–µ—à–Ω—ã–π —É—Å–ø–µ—Ö \n"
                             "\n"
                             "-- –í —ç—Ç–∞–ø–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ -- \n")

    elif message.text == "–í—ã–±—Ä–∞—Ç—å —à–∞—Ö—Ç—É":
        await message.answer("–í—ã–±–æ—Ä —à–∞—Ö—Ç—ã. \n"
                             "1. –ö–∞–º–µ–Ω–Ω–æ–µ —Ä—É—Å–ª–æ \n")

    elif message.text == "–°–æ–≤–º–µ—Å—Ç–Ω–∞—è —à–∞—Ö—Ç–∞":
        await message.answer("–í—ã–±–æ—Ä –¥—Ä—É–≥–∞ \n"
                             "1. ... \n"
                             "\n"
                             "0/1\n")

    elif message.text == "–°–∏—Å—Ç–µ–º–∞ –ø–æ–∏—Å–∫–∞ —à–∞—Ö—Ç":
        await message.answer("–ü–æ–∏—Å–∫ —à–∞—Ö—Ç—ã.\n")
        keyboard = create_keyboard(state="Study")
        await message.answer("–®–∞—Ö—Ç–∞ ‚Ññ1 \n", reply_markup=keyboard)
        keyboard = create_keyboard(state="Study")
        await message.answer("–®–∞—Ö—Ç–∞ ‚Ññ2 \n", reply_markup=keyboard)
        keyboard = create_keyboard(state="Study")
        await message.answer("–®–∞—Ö—Ç–∞ ‚Ññ3 \n", reply_markup=keyboard)

        @router.callback_query()
        async def handle_callback(callback_query: CallbackQuery):
            if callback_query.data == "Study":
                await callback_query.message.answer("–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–æ!")
                await callback_query.answer()

    else:
        await message.answer(f"—Ç—É—Ç –±—É–¥–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞")

